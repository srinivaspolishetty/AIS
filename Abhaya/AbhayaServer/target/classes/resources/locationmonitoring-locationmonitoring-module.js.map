{"version":3,"sources":["webpack:///./src/app/common/directives/dateformatter.ts","webpack:///./src/app/common/services/locationmonitoring.api.ts","webpack:///./src/app/locationmonitoring/locationmonitoring-routing.module.ts","webpack:///./src/app/locationmonitoring/locationmonitoring.component.css","webpack:///./src/app/locationmonitoring/locationmonitoring.component.html","webpack:///./src/app/locationmonitoring/locationmonitoring.component.ts","webpack:///./src/app/locationmonitoring/locationmonitoring.module.ts"],"names":[],"mappings":"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","file":"locationmonitoring-locationmonitoring-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n// providers: [{provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}] Need to Use component\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate = '';\r\n        if (date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationMonitoringServiceApi {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n      'Authorization': 'my-auth-token'\r\n    })\r\n  };\r\n  getLocationMonitoringDetails(page:Number, size:Number, startDate:string, endDate:string, searchValue:string) {\r\n    let url = `${environment.apiBase}${environment.version}/lmpPacketData`;\r\n    url += `?page=${page}&size=${size}&searchValue=${searchValue}&startDate=${startDate}&endDate=${endDate}`;\r\n    return this.httpClient.get(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LocationmonitoringComponent } from './locationmonitoring.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: LocationmonitoringComponent, }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LocationmonitoringRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvY2F0aW9ubW9uaXRvcmluZy9sb2NhdGlvbm1vbml0b3JpbmcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row p-t-1 page-header\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <h4>Location Management</h4>\\r\\n    <nav aria-label=\\\"breadcrumb\\\" class=\\\"d-none d-sm-block\\\">\\r\\n      <ol class=\\\"breadcrumb\\\">\\r\\n          <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\r\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Location Management</li>\\r\\n      </ol>\\r\\n    </nav>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-6 col-md-10 p-t-3\\\">\\r\\n    <span class=\\\"text-white\\\">Total Records : {{page.totalElements}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-2 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn-refresh\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </button>\\r\\n     <button type=\\\"button\\\" class=\\\"btn-search\\\" (click)=\\\"btnShowFilters()\\\"><i class=\\\"icon-ic_searchfilter\\\"></i></button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row page-filters\\\" [ngClass]=\\\"{'show': showFilters == true}\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By IMEI/Vehicle No\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n            (keyup)=\\\"searchData();\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn-close close\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\" (click)=\\\"clearSearch();\\\" *ngIf=\\\"showSearchClear\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group-append datepicker\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"Start Date\\\" name=\\\"dp\\\"\\r\\n              [(ngModel)]=\\\"startDateModel\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #startDate=\\\"ngbDatepicker\\\">\\r\\n            <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"startDate.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"input-group-append datepicker\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"End Date\\\" name=\\\"dp\\\"\\r\\n                [(ngModel)]=\\\"endDateModel\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #endDate=\\\"ngbDatepicker\\\">\\r\\n              <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"endDate.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\r\\n                  aria-hidden=\\\"true\\\"></i></button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"box-rect-round o-x-auto\\\">\\r\\n      <table class=\\\"grid-table m-t-3\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>IMEI No</th>\\r\\n            <th>Vehicle No</th>\\r\\n            <th>Vendor ID</th>\\r\\n            <th>Latitude</th>\\r\\n            <th>Longitude</th>\\r\\n            <th>Network Date</th>\\r\\n            <th>Network Time</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"noData\\\">\\r\\n          <tr *ngFor=\\\"let location of locationMonitoringdata | paginate: { id: 'locationmonitoringpage', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\r\\n            <td>{{location.lmpPacketDataId}}</td>\\r\\n            <td>{{location.imei}}</td>\\r\\n            <td>{{location.vehicleRegNo}}</td>\\r\\n            <td>{{location.vendorId}}</td>\\r\\n            <td>{{location.latitude}}</td>\\r\\n            <td>{{location.longitude}}</td>\\r\\n            <td>{{location.networkDate}}</td>\\r\\n            <td>{{location.networkTime}}</td>\\r\\n            <td> \\r\\n              <div class=\\\"actions-menu dropdown-click\\\">\\r\\n                <button>\\r\\n                  <i class=\\\"icon-ic_more\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n                <ul>\\r\\n                  <li>\\r\\n                    <a title=\\\"View Location Details\\\" class=\\\"icon\\\" (click)=\\\"locationDetails(location)\\\">\\r\\n                      <i class=\\\"icon-ic_view\\\" aria-hidden=\\\"true\\\"></i><span>View Details</span>\\r\\n                    </a>\\r\\n                  </li>\\r\\n              \\r\\n                </ul>\\r\\n                </div>\\r\\n                  </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <div *ngIf=\\\"!noData\\\">\\r\\n          <div class=\\\"grid-nodata text-center text-red-medium\\\">\\r\\n            <h6>No Data Found</h6>\\r\\n          </div>\\r\\n        </div>\\r\\n      </table>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div style=\\\"margin:0px auto;\\\">\\r\\n          <pagination-controls *ngIf=\\\"noData\\\" id=\\\"locationmonitoringpage\\\" class=\\\"pagination\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\r\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\r\\n          </pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { LocationMonitoringServiceApi } from '../common/services/locationmonitoring.api';\nimport { LocationMonitoring } from '../common/models/locationmonitoring.model';\nimport { PageModel } from '../common/models/page.model';\nimport { NgbDateFRParserFormatter } from '../common/directives/dateformatter';\nimport { LocationdetailsComponent } from './locationdetails/locationdetails.component';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-locationmonitoring',\n    templateUrl: './locationmonitoring.component.html',\n    styleUrls: ['./locationmonitoring.component.css']\n})\nexport class LocationmonitoringComponent implements OnInit, OnDestroy {\n\n    public showFilters: Boolean = false;\n    public page: PageModel = new PageModel();\n    public pageSize: Number = environment.pageSize;\n    public p: number;\n    startDateModel: NgbDateStruct;\n    endDateModel: NgbDateStruct;\n    public searchValue: string;\n    public showSearchClear = false;\n    public noData: Boolean = false;\n    locationMonitoringdata: Array<LocationMonitoring> = [];\n    updateLocationDetails;\n    intervalTime: number = environment.setIntervalTime;\n\n    constructor(private locationApiService: LocationMonitoringServiceApi, private router: Router,\n        private modalService: NgbModal, private ngbDateFRParserFormatter: NgbDateFRParserFormatter) {\n            this.searchValue = '';\n    }\n\n    ngOnInit() {\n        this.getLocationMonitoringDetails(0, this.pageSize);\n        this.updateLocationDetails = setInterval(() => {\n            this.getLocationMonitoringDetails(0, this.pageSize);\n        }, this.intervalTime);\n    }\n\n    locationDetails(locationDetails) {\n        const modalRef = this.modalService.open(LocationdetailsComponent, {\n            size: 'lg', backdrop: 'static',\n            keyboard: false\n        });\n        modalRef.componentInstance.selectedLocationDetails = locationDetails;\n    }\n\n    viewTracking(curLocation) {\n        this.router.navigate(['/trackdevice'],\n            {\n                queryParams: { imeiNumber: curLocation.imei },\n                queryParamsHandling: 'merge'\n            });\n    }\n\n    btnShowFilters() {\n        this.showFilters = !this.showFilters;\n    }\n    changeDate() {\n        this.getLocationMonitoringDetails(0, this.pageSize);\n    }\n    searchData() {\n        this.getLocationMonitoringDetails(0, this.pageSize);\n        this.showSearchClear = (this.searchValue.length > 4) ? true : false;\n    }\n    refreshPage() {\n        this.searchValue = '';\n        this.startDateModel = undefined;\n        this.endDateModel = undefined;\n    }\n    clearSearch() {\n        this.searchValue = '';\n        this.showSearchClear = false;\n        this.searchData();\n    }\n    pageChanged(event) {\n        this.p = event;\n        this.getLocationMonitoringDetails(this.p - 1, this.pageSize);\n    }\n    getLocationMonitoringDetails(page: Number, size: Number) {\n        const formatStartDate = this.ngbDateFRParserFormatter.format(this.startDateModel);\n        const formatEndDate = this.ngbDateFRParserFormatter.format(this.endDateModel);\n        this.locationApiService.getLocationMonitoringDetails(page, size, formatStartDate, formatEndDate, this.searchValue)\n            .subscribe((data: LocationMonitoring) => {\n                this.locationMonitoringdata = data.content;\n                this.noData = (this.locationMonitoringdata.length > 0);\n                this.page = data.page;\n                console.log(this.locationMonitoringdata);\n            });\n    }\n\n    ngOnDestroy() {\n        if (this.updateLocationDetails) {\n            clearInterval(this.updateLocationDetails);\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LocationmonitoringRoutingModule } from './locationmonitoring-routing.module';\nimport { LocationmonitoringComponent } from './locationmonitoring.component';\n\n@NgModule({\n  declarations: [LocationmonitoringComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    FormsModule,\n    NgxPaginationModule,\n    LocationmonitoringRoutingModule\n  ]\n})\nexport class LocationmonitoringModule { }\n"],"sourceRoot":""}