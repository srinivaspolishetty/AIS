{"version":3,"sources":["webpack:///./src/app/commandmanagement/commandexecutive.component.css","webpack:///./src/app/commandmanagement/commandexecutive.component.html","webpack:///./src/app/commandmanagement/commandexecutive.component.ts","webpack:///./src/app/commandmanagement/commandlist/commandlist.component.css","webpack:///./src/app/commandmanagement/commandlist/commandlist.component.html","webpack:///./src/app/commandmanagement/commandlist/commandlist.component.ts","webpack:///./src/app/commandmanagement/commandmanagement-routing.module.ts","webpack:///./src/app/commandmanagement/commandmanagement.module.ts","webpack:///./src/app/common/directives/dateformatter.ts"],"names":[],"mappings":"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","file":"commandmanagement-commandmanagement-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmRtYW5hZ2VtZW50L2NvbW1hbmRleGVjdXRpdmUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row p-t-1 \\\">\\n  <div class=\\\"col-md-10\\\">\\n    <h4>Command Execute</h4>\\n    <nav aria-label=\\\"breadcrumb\\\" class=\\\"d-none d-sm-block\\\">\\n      <ol class=\\\"breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Command Management</li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Command Execute</li>\\n      </ol>\\n    </nav>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"box-rect-round\\\">\\n      <form #commandExeForm=\\\"ngForm\\\" name=\\\"form\\\" novalidate\\n        (ngSubmit)=\\\"commandExeForm.valid && executecommand(commandExeForm)\\\">\\n        <div class=\\\"row p-t-6 p-r-4 m-a-0\\\">\\n          <div class=\\\"col-md-4 p-r-0 form-group\\\"\\n            [class.has-error]=\\\"commandExeForm.submitted && executeTypecontrol.invalid\\\">\\n            <label class=\\\"required\\\">Execute Type</label>\\n            <select class=\\\"form-control\\\" name=\\\"executeType\\\" required #executeTypecontrol=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"executeType\\\" (change)=\\\"executechange()\\\">\\n              <option value=\\\"\\\">Select</option>\\n              <option value=\\\"SET\\\">SET</option>\\n              <option value=\\\"GET\\\">GET</option>\\n              <option value=\\\"CLR\\\">CLR</option>\\n            </select>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && executeTypecontrol.invalid\\\">\\n              Execute Type is required</span>\\n          </div>\\n          <div class=\\\"col-md-4 p-r-0 form-group\\\" [class.has-error]=\\\"commandExeForm.submitted && payLoadcontrol.invalid\\\">\\n            <label class=\\\"required\\\">Payload</label>\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"payLoad\\\" name=\\\"payLoad\\\" required #payLoadcontrol=\\\"ngModel\\\"\\n              (change)=\\\"payloadchange($event)\\\">\\n              <option value=\\\"\\\">Select</option>\\n              <option *ngFor=\\\"let data of payLoadData\\\" [value]=\\\"data.payload\\\">{{data.description}}</option>\\n            </select>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && payLoadcontrol.invalid\\\">\\n              Payload is required</span>\\n          </div>\\n          <div class=\\\"col-md-4 p-r-0 form-group\\\"\\n            [class.has-error]=\\\"commandExeForm.submitted && imeiNumbercontrol.invalid\\\">\\n            <label class=\\\"required\\\">IMEI Number</label>\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"imeiNumber\\\" #imeiNumbercontrol=\\\"ngModel\\\" required\\n              name=\\\"imeiNumber\\\">\\n              <option value=\\\"\\\">Select IMEI Number</option>\\n              <option *ngFor=\\\"let device of deviceData\\\" value=\\\"{{device.imeiNumber}}\\\">{{device.imeiNumber}}</option>\\n            </select>\\n            <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && imeiNumbercontrol.invalid\\\">\\n              IMEI Number is required</span>\\n          </div>\\n          <div class=\\\"col-md-4 p-r-0 form-group\\\"\\n            [class.has-error]=\\\"commandExeForm.submitted && payloadValuecontrol.invalid\\\" *ngIf=\\\"propertyValue == true\\\">\\n            <label class=\\\"required\\\">Value</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"payloadValue\\\" name=\\\"payloadValue\\\" required\\n              #payloadValuecontrol=\\\"ngModel\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"commandExeForm.submitted && payloadValuecontrol.invalid\\\">\\n              Value is required</span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row m-a-0\\\">\\n          <div class=\\\"col-md-6 form-group\\\" *ngIf=\\\"showBtn == true\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn-primary m-t-1\\\">{{btnText}}</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DeviceManagementServiceApi } from \"../common/services/devicemanagement.api\";\nimport { DeviceDetails } from \"../common/models/devicedetails.model\";\nimport { ToasterService } from \"../common/services/toaster.service\";\nimport { CommandManagementServiceApi } from \"../common/services/commandmanagement.api\";\nimport { Payload } from \"../common/models/payload.model\";\n\n@Component({\n  selector: 'app-commandexecutive',\n  templateUrl: './commandexecutive.component.html',\n  styleUrls: ['./commandexecutive.component.css']\n})\nexport class CommandexecutiveComponent implements OnInit {\n\n  public deviceData: Array<DeviceDetails> = [];\n  public executeType: string;\n  public payLoad: string;\n  public imeiNumber: string;\n  public commandType: string;\n  public payloadValue: string;\n  public payloadDesc: string;\n  public payLoadData: Payload;\n  public propertyValue: Boolean = false;\n  public showBtn : Boolean = false;\n  public btnText : string;\n\n  constructor(private devicemanagementApiService: DeviceManagementServiceApi,\n    private commandmanagementApiService: CommandManagementServiceApi,\n    private toasterService: ToasterService) {\n    this.executeType = '';\n    this.payLoad = '';\n    this.imeiNumber = '';\n    this.commandType = '';\n  }\n\n  ngOnInit() {\n    this.getAllDeviceDetails()\n  }\n\n  executechange() {\n    this.getPayloadData(this.executeType);\n    if (this.executeType == 'SET') {\n      this.propertyValue = true;\n      this.showBtn = true;\n      this.imeiNumber = '';\n      this.payLoad = '';\n      this.btnText = \"SET Command\";\n      this.resetForm;\n    }\n    if (this.executeType == 'CLR') {\n      this.propertyValue = false;\n      this.payLoad = '';\n      this.imeiNumber = '';\n      this.imeiNumber = '';\n      this.payLoad = '';\n      this.showBtn = true;\n      this.btnText = \"CLR Command\";\n      this.resetForm;\n    }\n    if (this.executeType == 'GET') {\n      this.propertyValue = false;\n      this.payLoad = '';\n      this.imeiNumber = '';\n      this.imeiNumber = '';\n      this.payLoad = '';\n      this.showBtn = true;\n      this.btnText = \"GET Command\";\n      this.resetForm;\n    }\n\n  }\n  payloadchange(event) {\n    let selectedOptions = event.target['options'];\n    let selectedIndex = selectedOptions.selectedIndex;\n    this.payloadDesc = selectedOptions[selectedIndex].text;\n  }\n  getPayloadData(type: string) {\n    this.commandmanagementApiService.getpayloadDetails(type)\n      .subscribe((data: Payload) => {\n        this.payLoadData = data;\n      });\n  }\n  getAllDeviceDetails() {\n    this.devicemanagementApiService.getDeviceDetails(0, '', '', '')\n      .subscribe((data: DeviceDetails) => {\n        this.deviceData = data.content;\n      });\n  }\n\n  resetForm(commandExeForm) {\n    commandExeForm.resetForm();\n    this.executeType = '';\n    this.payLoad = '';\n    this.imeiNumber = '';\n    this.commandType = '';\n    this.propertyValue = false;\n  }\n  executecommand(commandExeForm) {\n    const newobj = new Object(\n      {\n        header: this.executeType,\n        payload: this.payLoad + this.payloadValue,\n        imeiNumber: this.imeiNumber,\n        description: this.payloadDesc\n      }\n    );\n    this.commandmanagementApiService.sendActivationRequest(JSON.stringify(newobj))\n      .subscribe((data: any) => {\n        data.code ==  200 ? this.toasterService.showSuccess('bottom-right', 'Successfully Executed '+this.executeType+' Command.') :this.toasterService.showError('bottom-right',''+data.message);\n        this.resetForm(commandExeForm);\n      }, error => {\n        console.log('error', error);\n        \n      }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmRtYW5hZ2VtZW50L2NvbW1hbmRsaXN0L2NvbW1hbmRsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row p-t-1\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <h4>Command List</h4>\\n    <nav aria-label=\\\"breadcrumb\\\">\\n      <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Command Management</li>\\n          <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Command List</li>\\n      </ol>\\n    </nav>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6 col-md-10 p-t-3\\\">\\n    <span class=\\\"text-white\\\">Total Records : {{page.totalElements}}</span>\\n  </div>\\n  <div class=\\\"col-md-2 text-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn-refresh\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n     <button type=\\\"button\\\" class=\\\"btn-search\\\" (click)=\\\"btnShowFilters()\\\"><i class=\\\"icon-ic_searchfilter\\\"></i></button>\\n  </div>\\n</div>\\n<div class=\\\"row page-filters\\\" [ngClass]=\\\"{'show': showFilters == true}\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 p-r-0\\\"></div>\\n      <div class=\\\"col-md-3 p-r-0\\\"></div>\\n      <div class=\\\"col-md-3 p-r-0\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By IMEI No\\\" [(ngModel)]=\\\"searchValue\\\"\\n            (keyup)=\\\"searchData();\\\">\\n          <button type=\\\"button\\\" class=\\\"btn-close close\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" (click)=\\\"clearSearch();\\\" *ngIf=\\\"showSearchClear\\\">&times;</span>\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3   \\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group-append datepicker\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n              [(ngModel)]=\\\"model\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n            <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\n                aria-hidden=\\\"true\\\"></i></button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"box-rect-round o-x-auto\\\">\\n      <table class=\\\"grid-table m-t-3\\\">\\n        <thead>\\n          <tr>\\n            <th>Task ID</th>\\n            <th>IMEI No</th>\\n            <th>Header</th>\\n            <th>Random Code</th>\\n            <th width=\\\"150px\\\">Reply Gateway No</th>\\n            <th width=\\\"180px\\\">Payload</th>\\n            <th width=\\\"150px\\\">Created Date</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"noData\\\">\\n          <tr *ngFor=\\\"let list of commandListData | paginate: { id: 'commandlistpage', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n            <td>{{list.taskId}}</td>\\n            <td>{{list.imeiNumber}}</td>\\n            <td>{{list.header}}</td>\\n            <td>{{list.randomCode}}</td>\\n            <td>{{list.replyGatewayNumber}}</td>\\n            <td>{{list.description}}</td>\\n            <td>{{list.createdDate}}</td>\\n            <td>\\n                <div class='actions-menu' (click)=\\\"viewCommandlist(list)\\\">\\n                    <button>\\n                      <i class=\\\"icon-ic_more\\\" aria-hidden=\\\"true\\\"></i>\\n                    </button></div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <div *ngIf=\\\"!noData\\\">\\n            <div class=\\\"grid-nodata text-center text-red-medium\\\">\\n              <h6>No Data Found</h6>\\n            </div>\\n          </div>\\n      </table>\\n      <div class=\\\"row\\\">\\n        <div style=\\\"margin:0px auto;\\\">\\n          <pagination-controls *ngIf=\\\"noData\\\" id=\\\"commandlistpage\\\" class=\\\"pagination\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n          </pagination-controls>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { CommandManagementServiceApi } from \"../../common/services/commandmanagement.api\";\nimport { Commandlist } from \"../../common/models/commandlist.model\";\nimport { PageModel } from \"../../common/models/page.model\";\nimport { NgbDateFRParserFormatter } from \"../../common/directives/dateformatter\";\nimport { ViewcommanddetailsComponent } from \"../viewcommanddetails/viewcommanddetails.component\";\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-commandlist',\n  templateUrl: './commandlist.component.html',\n  styleUrls: ['./commandlist.component.css']\n})\nexport class CommandlistComponent implements OnInit {\n\n  public pageSize: Number = environment.pageSize;\n  public showFilters : Boolean = false;\n  public page: PageModel = new PageModel();\n  public p : number;\n  model: NgbDateStruct;\n  public searchValue : string;\n  public showSearchClear = false;\n  public noData : Boolean = false;\n  commandListData : Array<Commandlist> = [];\n  constructor(private modalService: NgbModal,\n    private ngbDateFRParserFormatter: NgbDateFRParserFormatter,\n    private commandmanagementApiService: CommandManagementServiceApi) {\n    this.searchValue = '';\n    }\n\n  ngOnInit() {\n    this.getCommandDetails(0, this.pageSize);\n  }\n\n  refreshPage() {\n    this.searchValue = '';\n    this.model = undefined;\n    this.getCommandDetails(0, this.pageSize);\n  }\n  viewCommandlist(commandListView){\n    const modalRef = this.modalService.open(ViewcommanddetailsComponent, { size : 'lg', backdrop: 'static',\n    keyboard: false });\n    modalRef.componentInstance.selectCommandDetails = commandListView;\n  }\n\n  btnShowFilters(){\n    this.showFilters = !this.showFilters;\n  }\n  changeDate() {\n    this.getCommandDetails(0, this.pageSize);\n  }\n  searchData() {\n    this.getCommandDetails(0, this.pageSize);\n    this.showSearchClear = (this.searchValue.length > 4) ? true : false;\n  }\n  clearSearch() {\n    this.searchValue = '';\n    this.showSearchClear = false;\n    this.searchData();\n  }\n  pageChanged(event) {\n    this.p = event;\n    this.getCommandDetails(event - 1, this.pageSize);\n  }\n  getCommandDetails(page:Number, size:Number) {\n    const formatDate = this.ngbDateFRParserFormatter.format(this.model);\n    this.commandmanagementApiService.getCommandList(page, size, formatDate, this.searchValue)\n    .subscribe((data : Commandlist) => {\n      this.commandListData = data.content;\n      this.noData = (this.commandListData.length > 0);\n      this.page = data.page;\n      console.log(this.commandListData);\n    });\n  }\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommandexecutiveComponent } from \"./commandexecutive.component\";\r\nimport { CommandlistComponent } from \"./commandlist/commandlist.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'commandexecute', pathMatch: 'full' },\r\n  { path: 'commandexecute', component: CommandexecutiveComponent, },\r\n  { path: 'commandlist', component: CommandlistComponent, }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CommandmanagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { CommandexecutiveComponent } from './commandexecutive.component';\nimport { CommandmanagementRoutingModule } from \"./commandmanagement-routing.module\";\nimport { CommandlistComponent } from './commandlist/commandlist.component';\n\n@NgModule({\n  declarations: [CommandexecutiveComponent, CommandlistComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    NgxPaginationModule,\n    CommandmanagementRoutingModule\n  ]\n})\nexport class CommandmanagementModule { }\n","import { Injectable } from '@angular/core';\r\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n// providers: [{provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}] Need to Use component\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate = '';\r\n        if (date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n"],"sourceRoot":""}