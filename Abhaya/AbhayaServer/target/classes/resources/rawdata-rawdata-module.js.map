{"version":3,"sources":["webpack:///./src/app/common/directives/dateformatter.ts","webpack:///./src/app/common/services/rawdata.api.ts","webpack:///./src/app/rawdata/rawdata-routing.module.ts","webpack:///./src/app/rawdata/rawdata.component.css","webpack:///./src/app/rawdata/rawdata.component.html","webpack:///./src/app/rawdata/rawdata.component.ts","webpack:///./src/app/rawdata/rawdata.module.ts"],"names":[],"mappings":"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","file":"rawdata-rawdata-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n// providers: [{provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}] Need to Use component\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate = '';\r\n        if (date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RawDataServiceApi {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\r\n            'Authorization': 'my-auth-token'\r\n        })\r\n    };\r\n    getrawdata(page: Number, size: Number, startDate: string, endDate: string, searchValue: string, cvptype: string,packetType: string) {\r\n        let url = `${environment.apiBase}${environment.version}/rawData`;\r\n        url += `?page=${page}&size=${size}&cvpType=${cvptype}&packetStatus=${packetType}&startDate=${startDate}&endDate=${endDate}&imeiNumber=${searchValue}`;\r\n        return this.httpClient.get(url);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RawdataComponent } from './rawdata.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: RawdataComponent, }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RawdataRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jhd2RhdGEvcmF3ZGF0YS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row p-t-1 page-header\\\">\\r\\n  <div class=\\\"col-md-10\\\">\\r\\n    <h4>Raw Data</h4>\\r\\n    <nav aria-label=\\\"breadcrumb\\\" class=\\\"d-none d-sm-block\\\">\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\r\\n          <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Raw Data Details</li>\\r\\n        </ol>\\r\\n      </nav>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-9 col-sm-10 col-md-10 p-t-3\\\">\\r\\n    <span class=\\\"text-white\\\">Total Records : {{page.totalElements}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 col-sm-2 col-md-2 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn-refresh\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n     <button type=\\\"button\\\" class=\\\"btn-search\\\" (click)=\\\"btnShowFilters()\\\"><i class=\\\"icon-ic_searchfilter\\\"></i></button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row page-filters\\\" [ngClass]=\\\"{'show': showFilters == true}\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By IMEI\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n            (keyup)=\\\"searchData();\\\">\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn-close close\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\" (click)=\\\"clearSearch();\\\" *ngIf=\\\"showSearchClear\\\">&times;</span>\\r\\n          </button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"cvpType\\\"  (change)=\\\"cvpChange()\\\">\\r\\n          <option value=\\\"\\\">CVP Type</option>\\r\\n          <option value=\\\"LMP\\\">LMP</option>\\r\\n          <option value=\\\"EPB\\\">EPB</option>\\r\\n          <option value=\\\"HMP\\\">HMP</option>\\r\\n        </select>          \\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"packetType\\\"  (change)=\\\"packetChange()\\\">\\r\\n          <option value=\\\"\\\">Packet Status</option>\\r\\n          <option value=\\\"Live\\\">Live</option>\\r\\n          <option value=\\\"History\\\">History</option>\\r\\n          <option value=\\\"Normal Packet\\\">Normal Packet</option>\\r\\n        </select>          \\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group-append datepicker\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"Start Date\\\" name=\\\"dp\\\"\\r\\n              [(ngModel)]=\\\"startDateModel\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #startDate=\\\"ngbDatepicker\\\">\\r\\n            <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"startDate.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group-append datepicker\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"End Date\\\" name=\\\"dp\\\"\\r\\n              [(ngModel)]=\\\"endDateModel\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #endDate=\\\"ngbDatepicker\\\">\\r\\n            <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"endDate.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\r\\n                aria-hidden=\\\"true\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"box-rect-round o-x-auto\\\">\\r\\n      <table class=\\\"grid-table m-t-3\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>IMEI No</th>\\r\\n            <th>Vehicle No</th>\\r\\n            <th>CVP Type</th>\\r\\n            <th>Network Date</th>\\r\\n            <th>Network Time</th>\\r\\n            <th>Packet Status</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"noData\\\">\\r\\n          <tr *ngFor=\\\"let details of rawdata  | paginate: { id: 'rawdatapages', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\r\\n            <td>{{details.rawDataId}}</td>\\r\\n            <td>{{details.imeiNumber}}</td>\\r\\n            <td>{{details.vehicleRegNo}}</td>\\r\\n            <td>{{details.cvpType}}</td>\\r\\n            <td>{{details.networkDate}}</td>\\r\\n            <td>{{details.networkTime}}</td>\\r\\n            <td>{{details.packetStatus}}</td>\\r\\n            <td (click)=\\\"rawDataDetails(details)\\\">\\r\\n                <div class='actions-menu'>\\r\\n                    <button>\\r\\n                      <i class=\\\"icon-ic_more\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button></div></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <div *ngIf=\\\"!noData\\\">\\r\\n            <div class=\\\"grid-nodata text-center text-red-medium\\\">\\r\\n              <h6>No Data Found</h6>\\r\\n            </div>\\r\\n          </div>\\r\\n      </table>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          \\r\\n        <div *ngIf=\\\"noData\\\" style=\\\"margin:0px auto;\\\">\\r\\n          <pagination-controls id=\\\"rawdatapages\\\" class=\\\"pagination float-right\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\r\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\r\\n          </pagination-controls>\\r\\n          <div class=\\\"float-left p-t-1\\\">\\r\\n              Page size :\\r\\n              <select (change)=\\\"changePageSize()\\\" [(ngModel)]=\\\"pageSizeCount\\\">\\r\\n                <option *ngFor=\\\"let number of pageSizeValues\\\" value={{number}}>{{number}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n        </div>\\r\\n          \\r\\n        \\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { RawDataServiceApi } from '../common/services/rawdata.api';\nimport { RawData } from '../common/models/rawdata.model';\nimport { PageModel } from '../common/models/page.model';\nimport { NgbDateFRParserFormatter } from '../common/directives/dateformatter';\nimport { RawdatadetailsComponent } from './rawdatadetails/rawdatadetails.component';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-rawdata',\n    templateUrl: './rawdata.component.html',\n    styleUrls: ['./rawdata.component.css']\n})\nexport class RawdataComponent implements OnInit, OnDestroy {\n\n    intervalTime: number = environment.setIntervalTime;\n    public showFilters: Boolean = false;\n    public page: PageModel = new PageModel();\n    public p: Number;\n    startDateModel: NgbDateStruct;\n    endDateModel: NgbDateStruct;\n    public searchValue: string;\n    public cvpType: string;\n    public packetType: string;\n    public showSearchClear = false;\n    public noData: Boolean = false;\n    public pageSizeValues = [];\n    rawdata: Array<RawData> = [];\n    public pageSizeCount: Number;\n    UpdateRawdata;\n\n\n    constructor(private rawdataApiService: RawDataServiceApi, private modalService: NgbModal,\n        private ngbDateFRParserFormatter: NgbDateFRParserFormatter) {\n        this.cvpType = '';\n        this.packetType = '';\n        this.searchValue = '';\n        this.pageSizeValues = [10, 50, 100, 200];\n        this.pageSizeCount = 10;\n    }\n\n    ngOnInit() {\n        this.getAllRawData(0, this.pageSizeCount);\n        this.UpdateRawdata = setInterval(() => {\n            this.getAllRawData(0, this.pageSizeCount);\n        }, this.intervalTime);\n    }\n    btnShowFilters() {\n        this.showFilters = !this.showFilters;\n    }\n\n    changeDate() {\n        this.getAllRawData(0, this.pageSizeCount);\n    }\n    cvpChange() {\n        this.getAllRawData(0, this.pageSizeCount);\n    }\n    packetChange() {\n        this.getAllRawData(0, this.pageSizeCount);\n    }\n    searchData() {\n        this.getAllRawData(0, this.pageSizeCount);\n        this.showSearchClear = (this.searchValue.length > 4) ? true : false;\n    }\n    refreshPage() {\n        this.searchValue = '';\n        this.cvpType = '';\n        this.packetType = '';\n        this.startDateModel = undefined;\n        this.endDateModel = undefined;\n        this.getAllRawData(0, this.pageSizeCount);\n    }\n    clearSearch() {\n        this.searchValue = '';\n        this.showSearchClear = false;\n        this.searchData();\n    }\n    changePageSize() {\n        this.getAllRawData(0, this.pageSizeCount);\n    }\n    rawDataDetails(rawdetails) {\n        const modalRef = this.modalService.open(RawdatadetailsComponent, {\n            size: 'lg', backdrop: 'static',\n            keyboard: false\n        });\n        modalRef.componentInstance.selectedrawdata = rawdetails;\n    }\n    pageChanged(event) {\n        this.p = event - 1;\n        this.getAllRawData(this.p, this.pageSizeCount);\n    }\n    getAllRawData(page: Number, size: Number) {\n        const formatStartDate = this.ngbDateFRParserFormatter.format(this.startDateModel);\n        const formatEndDate = this.ngbDateFRParserFormatter.format(this.endDateModel);\n        this.rawdataApiService.getrawdata(page, size, formatStartDate, formatEndDate, this.searchValue, this.cvpType,this.packetType)\n            .subscribe((data: RawData) => {\n                this.rawdata = data.content;\n                this.noData = (this.rawdata.length > 0);\n                this.page = data.page;\n            });\n    }\n    ngOnDestroy() {\n        if (this.UpdateRawdata) {\n            clearInterval(this.UpdateRawdata);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RawdataComponent } from './rawdata.component';\nimport { RawdataRoutingModule } from \"./rawdata-routing.module\";\n\n@NgModule({\n  declarations: [RawdataComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    NgxPaginationModule,\n    RawdataRoutingModule\n  ]\n})\nexport class RawdataModule { }\n"],"sourceRoot":""}