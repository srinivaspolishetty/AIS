{"version":3,"sources":["webpack:///./src/app/common/directives/dateformatter.ts","webpack:///./src/app/devicemanagement/devicecommunication/devicecommunication.component.css","webpack:///./src/app/devicemanagement/devicecommunication/devicecommunication.component.html","webpack:///./src/app/devicemanagement/devicecommunication/devicecommunication.component.ts","webpack:///./src/app/devicemanagement/devicemanagement-routing.module.ts","webpack:///./src/app/devicemanagement/devicemanagement.module.ts","webpack:///./src/app/devicemanagement/devices.component.css","webpack:///./src/app/devicemanagement/devices.component.html","webpack:///./src/app/devicemanagement/devices.component.ts"],"names":[],"mappings":"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","file":"devicemanagement-devicemanagement-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n// providers: [{provide: NgbDateParserFormatter, useClass: NgbDateFRParserFormatter}] Need to Use component\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate = '';\r\n        if (date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + '/' : '';\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + '/' : '';\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldmljZW1hbmFnZW1lbnQvZGV2aWNlY29tbXVuaWNhdGlvbi9kZXZpY2Vjb21tdW5pY2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row p-t-1 page-header\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <h4>Device Communication</h4>\\n    <nav aria-label=\\\"breadcrumb\\\" class=\\\"d-none d-sm-block\\\">\\n      <ol class=\\\"breadcrumb\\\">\\n        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Device Management</li>\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Device Communication</li>\\n      </ol>\\n    </nav>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-9 col-sm-10 col-md-10 p-t-3\\\">\\n    <span class=\\\"text-white\\\">Total Records : {{page.totalElements}}</span>\\n  </div>\\n  <div class=\\\"col-3 col-sm-2 col-md-2 text-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn-refresh\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn-search\\\" (click)=\\\"btnShowFilters()\\\"><i class=\\\"icon-ic_searchfilter\\\"></i></button>\\n  </div>\\n</div>\\n<div class=\\\"row page-filters\\\" [ngClass]=\\\"{'show': showFilters == true}\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By IMEI No\\\" [(ngModel)]=\\\"searchValue\\\"\\n            (keyup)=\\\"searchData();\\\">\\n          <!-- <button type=\\\"button\\\" class=\\\"btn-close close\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" (click)=\\\"clearSearch();\\\" *ngIf=\\\"showSearchClear\\\">&times;</span>\\n          </button> -->\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group-append datepicker\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" [(ngModel)]=\\\"model\\\"\\n              (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n            <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"> <i\\n                class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"box-rect-round o-x-auto\\\">\\n      <table class=\\\"grid-table m-t-3\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>IMEI No</th>\\n            <th>Status</th>\\n            <th *ngIf=\\\"action == 'vehicleMode'\\\">Vehicle Mode</th>\\n            <th *ngIf=\\\"action == 'ignitionStatus'\\\">Ignition Status</th>\\n            <th *ngIf=\\\"action == 'emergencyStatus'\\\">Emergency Status</th>\\n            <th *ngIf=\\\"action == 'mainPowerStatus'\\\">Main Power Status</th>\\n            <th *ngIf=\\\"action == 'tamperAlert'\\\">Tamper Alert</th>\\n            <th *ngIf=\\\"action == 'memoryPercentage'\\\">Memory Percentage</th>\\n            <th *ngIf=\\\"action == 'batteryPercentage'\\\">Battery Percentage</th>\\n            <th>Langitude</th>\\n            <th>Latitude</th>\\n            <th>Network Date</th>\\n            <th>Network Time</th>\\n            <th>Is Over Speed</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"noData\\\">\\n          <tr [ngClass]=\\\"{'bg-row' : isDeviceOverSpeed}\\\"\\n            *ngFor=\\\"let details of deviceCommData | paginate: { id: 'devicecommdetailspage', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\n            <td>{{details.deviceCommunicationId}}</td>\\n            <td>{{details.imeiNumber}}</td>\\n            <td>{{details.status}}</td>\\n            <td *ngIf=\\\"action == 'vehicleMode'\\\">{{details.vehicleMode}}</td>\\n            <td *ngIf=\\\"action == 'ignitionStatus'\\\">{{details.ignitionStatus == 1 ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'emergencyStatus'\\\">{{details.emergencyStatus == 1 ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'mainPowerStatus'\\\">{{details.mainPowerStatus == 1 ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'tamperAlert'\\\">{{details.tamperAlert == 'O' ? 'ON' : 'OFF'}}</td>\\n            <td *ngIf=\\\"action == 'memoryPercentage'\\\">{{details.memoryPercentage > 40 ? 'Good' : 'Critical'}} ({{details.memoryPercentage}})</td>\\n            <td *ngIf=\\\"action == 'batteryPercentage'\\\">{{details.batteryPercentage > 40 ? 'Good' : 'Critical'}} ({{details.batteryPercentage}})</td>\\n            <td>{{details.langitude}}</td>\\n            <td>{{details.latitude}}</td>\\n            <td>{{details.networkDate}}</td>\\n            <td>{{details.networkTime}}</td>\\n            <td>{{details.isDeviceOverSpeed}}</td>\\n            <td (click)=\\\"deviceComDetails(details)\\\">\\n              <div class=\\\"actions-menu\\\">\\n                <button>\\n                  <i class=\\\"icon-ic_more\\\" aria-hidden=\\\"true\\\"></i>\\n                </button></div>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <div *ngIf=\\\"!noData\\\">\\n          <div class=\\\"grid-nodata text-center text-red-medium\\\">\\n            <h6>No Data Found</h6>\\n          </div>\\n        </div>\\n      </table>\\n      <div class=\\\"row\\\">\\n        <div style=\\\"margin:0px auto;\\\">\\n          <pagination-controls *ngIf=\\\"noData\\\" id=\\\"devicecommdetailspage\\\" class=\\\"pagination\\\"\\n            (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\" directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\"\\n            previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\n          </pagination-controls>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { DeviceManagementServiceApi } from '../../common/services/devicemanagement.api';\nimport { DeviceCommunication } from '../../common/models/devicecommunication.model';\nimport { PageModel } from '../../common/models/page.model';\nimport { NgbDateFRParserFormatter } from '../../common/directives/dateformatter';\nimport { DevicecomdetailsComponent } from './devicecomdetails/devicecomdetails.component';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n    selector: 'app-devicecommunication',\n    templateUrl: './devicecommunication.component.html',\n    styleUrls: ['./devicecommunication.component.css']\n})\nexport class DevicecommunicationComponent implements OnInit {\n    public showFilters: Boolean = false;\n    public page: PageModel = new PageModel();\n    public pageSize: Number = environment.pageSize;\n    public p: number;\n    public action : string;\n    public actionValue : string;\n    model: NgbDateStruct;\n    public formatDate: string;\n    public searchValue: string;\n    public showSearchClear = false;\n    public noData: Boolean = false;\n    deviceCommData: Array<DeviceCommunication> = [];\n    constructor(private devicemanagementApiService: DeviceManagementServiceApi, private modalService: NgbModal,\n        private ngbDateFRParserFormatter: NgbDateFRParserFormatter,\n        private activatedRoute: ActivatedRoute) {\n        this.searchValue = '';\n    }\n\n    ngOnInit() {\n        this.activatedRoute.queryParams.subscribe(params => {\n            this.action = params['action'];\n            this.actionValue = params['actionValue'];\n        });\n        this.getAllDeviceCommunication(0, this.pageSize, this.action, this.actionValue);\n    }\n\n    deviceComDetails(deviceComDetails) {\n        const modalRef = this.modalService.open(DevicecomdetailsComponent, {\n            size: 'lg', backdrop: 'static',\n            keyboard: false\n        });\n        modalRef.componentInstance.selectedComDetails = deviceComDetails;\n    }\n\n    btnShowFilters() {\n        this.showFilters = !this.showFilters;\n    }\n    changeDate() {\n        this.getAllDeviceCommunication(0, this.pageSize, this.action, this.actionValue);\n    }\n    searchData() {\n        this.getAllDeviceCommunication(0, this.pageSize, this.action, this.actionValue);\n        this.showSearchClear = (this.searchValue.length > 4) ? true : false;\n    }\n    refreshPage() {\n        this.searchValue = '';\n        this.model = undefined;\n        this.getAllDeviceCommunication(0, this.pageSize, this.action, this.actionValue);\n    }\n    clearSearch() {\n        this.searchValue = '';\n        this.showSearchClear = false;\n        this.searchData();\n    }\n\n    pageChanged(event) {\n        this.p = event;\n        this.getAllDeviceCommunication(this.p - 1, this.pageSize, this.action, this.actionValue);\n    }\n    getAllDeviceCommunication(page: Number, size: Number, action:string, actionValue:string) {\n        this.formatDate = this.ngbDateFRParserFormatter.format(this.model);\n        this.devicemanagementApiService.getDeviceCommDetails(page, size, this.formatDate, this.searchValue, action, actionValue)\n            .subscribe((data: DeviceCommunication) => {\n                this.deviceCommData = data.content;\n                this.noData = (this.deviceCommData.length > 0);\n                this.page = data.page;\n                console.log(this.deviceCommData);\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DevicesComponent } from './devices.component';\r\nimport { DevicecommunicationComponent } from './devicecommunication/devicecommunication.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'devicedetails', pathMatch: 'full' },\r\n    { path: 'devicedetails', component: DevicesComponent, },\r\n    { path: 'devicecommunication', component: DevicecommunicationComponent, }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DevicemanagementRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DevicesComponent } from './devices.component';\nimport { DevicemanagementRoutingModule } from './devicemanagement-routing.module';\nimport { DevicecommunicationComponent } from './devicecommunication/devicecommunication.component';\n@NgModule({\n    declarations: [DevicesComponent, DevicecommunicationComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgbModule,\n        NgxPaginationModule,\n        DevicemanagementRoutingModule\n    ]\n})\nexport class DevicemanagementModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldmljZW1hbmFnZW1lbnQvZGV2aWNlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row p-t-1 page-header\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <h4>Device Details</h4>\\r\\n    <nav aria-label=\\\"breadcrumb\\\" class=\\\"d-none d-sm-block\\\">\\r\\n      <ol class=\\\"breadcrumb\\\">\\r\\n        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\r\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Device Management</li>\\r\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Device Details</li>\\r\\n      </ol>\\r\\n    </nav>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-9 col-sm-10 col-md-10 p-t-3\\\">\\r\\n    <span class=\\\"text-white\\\">Total Records : {{page.totalElements}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 col-sm-2 col-md-2 text-right\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn-refresh\\\" (click)=\\\"refreshPage()\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </button>\\r\\n     <button type=\\\"button\\\" class=\\\"btn-search\\\" (click)=\\\"btnShowFilters()\\\"><i class=\\\"icon-ic_searchfilter\\\"></i></button>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row page-filters\\\" [ngClass]=\\\"{'show': showFilters == true}\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-3\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\"></div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By IMEI No\\\" [(ngModel)]=\\\"searchValue\\\"\\r\\n            (keyup)=\\\"searchData();\\\">\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"input-group-append datepicker\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\r\\n              [(ngModel)]=\\\"model\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n            <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\r\\n              aria-hidden=\\\"true\\\"></i></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"box-rect-round\\\">\\r\\n      <table class=\\\"grid-table m-t-3\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>IMEI No</th>\\r\\n            <th>SIM No</th>\\r\\n            <th>IP Address</th>\\r\\n            <th>Date</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"noData\\\">\\r\\n          <tr\\r\\n            *ngFor=\\\"let details of deviceData | paginate: { id: 'devicedetailspage', itemsPerPage: page.size, currentPage: p, totalItems: page.totalElements }\\\">\\r\\n            <td>{{details.id}}</td>\\r\\n            <td>{{details.imeiNumber}}</td>\\r\\n            <td>{{details.simNumber}}</td>\\r\\n            <td>{{details.ipAddress}}</td>\\r\\n            <td>{{details.createdDate}}</td>\\r\\n            <!-- <td><i class=\\\"fa fa-ellipsis-v\\\" (click)=\\\"deviceDetailspopup(details)\\\" aria-hidden=\\\"true\\\"></i></td> -->\\r\\n            <td>\\r\\n              <div class='actions-menu dropdown-click'>\\r\\n                <button>\\r\\n                  <i class=\\\"icon-ic_more\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n                <ul>\\r\\n                  <li>\\r\\n                    <a title=\\\"Edit Vehicle Details\\\" class=\\\"icon\\\" (click)=\\\"deviceDetailspopup(details, 'view')\\\">\\r\\n                      <i class=\\\"icon-ic_view\\\" aria-hidden=\\\"true\\\"></i><span>View Details</span>\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                    <a title=\\\"Download QR Code\\\" class=\\\"icon\\\" (click)=\\\"deviceDetailspopup(details, 'edit')\\\">\\r\\n                      <i class=\\\"icon-ic_edit\\\" aria-hidden=\\\"true\\\"></i> <span>Edit Details</span>\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                    <a title=\\\"Install Device\\\" class=\\\"icon\\\" (click)=\\\"cmdHealthDevice(details, 'ACTVR', 'Device Activation')\\\">\\r\\n                      <i class=\\\"icon-ic_activate\\\" aria-hidden=\\\"true\\\"></i><span>Activation</span>\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                    <a title=\\\"View Vehicle Map\\\" class=\\\"icon\\\" (click)=\\\"cmdHealthDevice(details, 'HCHKR', 'Health')\\\">\\r\\n                      <i class=\\\"icon-ic_health\\\" aria-hidden=\\\"true\\\"></i><span>Health</span>\\r\\n                    </a>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                      <a title=\\\"View Vehicle Map\\\" class=\\\"icon\\\" (click)=\\\"packetDetails(details,'Activation', 'activationPacketData')\\\">\\r\\n                        <i class=\\\"icon-ic_activate_details\\\" aria-hidden=\\\"true\\\"></i><span>View Activation Details</span>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a title=\\\"View Vehicle Map\\\" class=\\\"icon\\\" (click)=\\\"packetDetails(details, 'Health', 'healthPacketData')\\\">\\r\\n                          <i class=\\\"icon-ic_health_details\\\" aria-hidden=\\\"true\\\"></i><span>View Health Details</span>\\r\\n                        </a>\\r\\n                      </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n              <!-- <div class=\\\"actions-menu\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"dropdown-toggle dropdown-toggle-split\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                      <i class=\\\"icon-ic_more\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                  <div class=\\\"dropdown-menu\\\">\\r\\n                      <ul>\\r\\n                          <li>\\r\\n                      <a title=\\\"Edit Vehicle Details\\\" class=\\\"icon\\\" (click)=\\\"deviceDetailspopup(details, 'view')\\\">\\r\\n                          <i class=\\\"icon-ic_view\\\" aria-hidden=\\\"true\\\"></i><span>View Details</span>\\r\\n                        </a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                        <a title=\\\"Download QR Code\\\" class=\\\"icon\\\" (click)=\\\"deviceDetailspopup(details, 'edit')\\\">\\r\\n                            <i class=\\\"icon-ic_edit\\\" aria-hidden=\\\"true\\\"></i> <span>Edit Details</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                          <a title=\\\"Install Device\\\" class=\\\"icon\\\" (click)=\\\"cmdHealthDevice(details, 'ACTVR', 'Device Activation')\\\">\\r\\n                              <i class=\\\"icon-ic_activate\\\" aria-hidden=\\\"true\\\"></i><span>Activation</span>\\r\\n                            </a>\\r\\n                          </li>\\r\\n                          <li>\\r\\n                            <a title=\\\"View Vehicle Map\\\" class=\\\"icon\\\" (click)=\\\"cmdHealthDevice(details, 'HCHKR', 'Health')\\\">\\r\\n                                <i class=\\\"icon-ic_health\\\" aria-hidden=\\\"true\\\"></i><span>Health</span>\\r\\n                              </a>\\r\\n                            </li>\\r\\n                            </ul>\\r\\n                  </div>\\r\\n                </div> -->\\r\\n\\r\\n\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <div *ngIf=\\\"!noData\\\">\\r\\n            <div class=\\\"grid-nodata text-center text-red-medium\\\">\\r\\n              <h6>No Data Found</h6>\\r\\n            </div>\\r\\n          </div>\\r\\n      </table>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div style=\\\"margin:0px auto;\\\">\\r\\n          <pagination-controls *ngIf=\\\"noData\\\" id=\\\"devicedetailspage\\\" class=\\\"pagination\\\" (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"6\\\"\\r\\n            directionLinks=\\\"true\\\" autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Prev\\\" nextLabel=\\\"Next\\\">\\r\\n          </pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { DeviceManagementServiceApi } from '../common/services/devicemanagement.api';\nimport { DeviceDetails } from '../common/models/devicedetails.model';\nimport { DeviceactivationComponent } from './deviceactivation/deviceactivation.component';\nimport { PageModel } from '../common/models/page.model';\nimport { NgbDateFRParserFormatter } from '../common/directives/dateformatter';\nimport { DevicedetailsComponent } from './devicedetails/devicedetails.component';\nimport { CommandManagementServiceApi } from '../common/services/commandmanagement.api';\nimport { ToasterService } from '../common/services/toaster.service';\nimport { PacketdetailsComponent } from './packetdetails/packetdetails.component';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-devicedetails',\n    templateUrl: './devices.component.html',\n    styleUrls: ['./devices.component.css']\n})\nexport class DevicesComponent implements OnInit {\n    public showFilters: Boolean = false;\n    public pageSize: Number = environment.pageSize;\n    public page: PageModel = new PageModel();\n    public p: Number;\n    model: NgbDateStruct;\n    public formatDate: string;\n    public searchValue: string;\n    public showSearchClear = false;\n    public noData: Boolean = false;\n    deviceData: Array<DeviceDetails> = [];\n    constructor(private devicemanagementApiService: DeviceManagementServiceApi, private modalService: NgbModal,\n        private ngbDateFRParserFormatter: NgbDateFRParserFormatter, private commandmanagementApiService: CommandManagementServiceApi,\n        private toasterService: ToasterService) {\n        this.searchValue = '';\n    }\n\n    ngOnInit() {\n        this.getAllDeviceDetails(0, this.pageSize);\n    }\n\n    refreshPage() {\n        this.searchValue = '';\n        this.model = undefined;\n        this.getAllDeviceDetails(0, this.pageSize);\n    }\n\n    cmdHealthDevice(device, headerType, messageText) {\n        const newobj = new Object(\n            {\n                header: headerType,\n                imeiNumber: device.imeiNumber,\n            }\n        );\n        this.commandmanagementApiService.sendActivationRequest(JSON.stringify(newobj))\n            .subscribe((_data: any) => {\n                this.toasterService.showSuccess('bottom-right', 'Successfully Sent ' + messageText + ' Message.');\n            }, (_error: any) => {\n                this.toasterService.showError('bottom-right', 'ERROR: Unable to Sent ' + messageText + ' Message.');\n            }\n            );\n    }\n    packetDetails(device, name, type) {\n        device.packetType = type;\n        device.packetName = name;\n        const modalRef = this.modalService.open(PacketdetailsComponent, { size: 'lg', backdrop: 'static', keyboard: false });\n        modalRef.componentInstance.packetDetails = device;\n    }\n    activateDevice(curDevice) {\n        const modalRef = this.modalService.open(DeviceactivationComponent, {\n            size: 'lg', backdrop: 'static',\n            keyboard: false\n        });\n        modalRef.componentInstance.deviceDetails = curDevice;\n    }\n\n    changeDate() {\n        this.getAllDeviceDetails(0, this.pageSize);\n    }\n    searchData() {\n        this.getAllDeviceDetails(0, this.pageSize);\n        this.showSearchClear = (this.searchValue.length > 4) ? true : false;\n    }\n    clearSearch() {\n        this.searchValue = '';\n        this.showSearchClear = false;\n        this.searchData();\n    }\n\n    deviceDetailspopup(deviceDetails, eventType) {\n        deviceDetails.selectedEvent = eventType;\n        const modalRef = this.modalService.open(DevicedetailsComponent, {\n            size: 'lg', backdrop: 'static',\n            keyboard: false\n        });\n        modalRef.componentInstance.selectedDeviceDetails = deviceDetails;\n        modalRef.result.then((result) => {\n            if (result === 'refreshContent') {\n                this.getAllDeviceDetails(0, this.pageSize);\n            }\n        }).catch((_error) => {\n        });\n    }\n\n    btnShowFilters() {\n        this.showFilters = !this.showFilters;\n    }\n\n    pageChanged(event) {\n        this.p = event;\n        this.getAllDeviceDetails(event - 1, this.pageSize);\n    }\n    getAllDeviceDetails(page: Number, size: Number) {\n        this.formatDate = this.ngbDateFRParserFormatter.format(this.model);\n        this.devicemanagementApiService.getDeviceDetails(page, size, this.formatDate, this.searchValue)\n            .subscribe((data: DeviceDetails) => {\n                this.deviceData = data.content;\n                this.noData = (this.deviceData.length > 0);\n                this.page = data.page;\n            });\n    }\n\n}\n"],"sourceRoot":""}