{"version":3,"sources":["webpack:///./src/app/mapview/mapview-routing.module.ts","webpack:///./src/app/mapview/mapview.component.css","webpack:///./src/app/mapview/mapview.component.html","webpack:///./src/app/mapview/mapview.component.ts","webpack:///./src/app/mapview/mapview.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACA;AAEvD,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAgB,GAAG;CAC7C,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;ACZjC,+DAA+D,+I;;;;;;;;;;;ACA/D,iwBAAiwB,4BAA4B,2fAA2f,oBAAoB,KAAK,oBAAoB,oYAAoY,upCAAupC,mZAAmZ,gBAAgB,+DAA+D,cAAc,+BAA+B,eAAe,gEAAgE,YAAY,kK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA74G;AACZ;AACuB;AAEa;AACd;AACO;AACV;AAQpE;IAoCI,0BAAoB,QAAqB,EAAU,0BAAsD,EAC7F,iBAAsC,EAAU,wBAAkD,EAClG,cAA8B;QAFtB,aAAQ,GAAR,QAAQ,CAAa;QAAU,+BAA0B,GAA1B,0BAA0B,CAA4B;QAC7F,sBAAiB,GAAjB,iBAAiB,CAAqB;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClG,mBAAc,GAAd,cAAc,CAAgB;QAlCnC,gBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAW,GAAY,KAAK,CAAC;QAKpC,QAAG,GAAG,SAAS,CAAC;QAChB,QAAG,GAAG,SAAS,CAAC;QAChB,YAAO,GAAG,mCAAmC,CAAC;QAS9C,eAAU,GAAG,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;QACvC,cAAS,GAAG,EAAE,CAAC;QACf,eAAU,GAAG;YACT,MAAM,EAAE,EAAE,IAAI,EAAE,mCAAmC,EAAE;YACrD,WAAW,EAAE,EAAE,IAAI,EAAE,iCAAiC,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,EAAE;SAChG,CAAC;QAGF,qBAAgB,GAAuB,EAAE,CAAC;QAUtC,IAAI,CAAC,KAAK,GAAG,8DAAoB,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACzB,CAAC;IAGD,mCAAQ,GAAR;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;IAClD,CAAC;IAGD,yCAAc,GAAd;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACzC,CAAC;IACD,qCAAU,GAAV;IACA,CAAC;IACD,qCAAU,GAAV;QACI,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B;IAEL,CAAC;IAED,mCAAQ,GAAR,UAAS,GAAG;QACR,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IACD,wCAAa,GAAb,UAAc,KAAa,EAAE,KAAa,EAAE,UAAU,EAAE,MAAM;QAC1D,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;QACpE,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;QAC3E,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IACD,0CAAe,GAAf;QAAA,iBAMC;QALG,IAAI,CAAC,0BAA0B,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,IAAiB;YACzE,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;YACnC,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,+CAAoB,GAApB;QACI,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;YACrE,IAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACtD,IAAM,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,cAAc,CAAC,aAAa,CAAC,CAAC;YACtG,IAAM,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;YAC9F,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;YACpF,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,KAAK,GAAG,GAAG,EAAE;gBACb,KAAK,GAAG,GAAG,CAAC;aACf;YACD,IAAI,KAAK,GAAG,CAAC,GAAG,EAAE;gBACd,KAAK,GAAG,CAAC,GAAG,CAAC;aAChB;SACJ;IACL,CAAC;IAED,6CAAkB,GAAlB;QAAA,iBAsCC;QArCG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;aACtE,SAAS,CAAC,UAAC,IAAS;YACjB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC;YACjC,IAAM,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;YAC/C,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,IAAY,CAAC;YACjB,IAAI,KAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClC,KAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;oBAC9D,GAAG,EAAE,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC;gBAC1D,KAAI,CAAC,WAAW,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC;gBACnH,IAAI,KAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,IAAI,KAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,EAAE;oBAC5G,KAAK,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE;wBAC9B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;4BAChB,QAAQ,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC;gCACvD,GAAG,EAAE,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;4BACtD,QAAQ,EAAE,IAAI;yBACjB,CAAC,CAAC;qBAEN;oBACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBAC3B;qBAAM;oBACH,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,cAAc,EAC5C,2DAA2D,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;iBAClF;aAGJ;iBAAM;gBACH,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,cAAc,EAC5C,2DAA2D,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;aAClF;QAGL,CAAC,CAAC,CAAC;IACX,CAAC;IACD,sCAAW,GAAX;QACI,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAClC;IACL,CAAC;IAvJQ,gBAAgB;QAL5B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAE1C,CAAC;yCAqCgC,sEAAW,EAAsC,gGAA0B;YAC1E,kFAAmB,EAAoC,yFAAwB;YAClF,+EAAc;OAtCjC,gBAAgB,CAwJ5B;IAAD,uBAAC;CAAA;AAxJ4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfY;AACM;AACF;AACU;AACA;AACS;AACtB;AACS;AAanD;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAXzB,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,mEAAgB,CAAC;YAChC,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,oEAAS;gBACT,4EAAoB;gBACpB,gEAAkB;gBAClB,uDAAa;aAChB;SACJ,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ","file":"mapview-mapview-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MapviewComponent } from './mapview.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: MapviewComponent, }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MapviewRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcHZpZXcvbWFwdmlldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row p-t-1\\\">\\n    <div class=\\\"col-md-10\\\">\\n      <h4>Map View</h4>\\n      <nav aria-label=\\\"breadcrumb\\\" class=\\\"d-none d-sm-block\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n          <li class=\\\"breadcrumb-item\\\"><a href=\\\"#\\\">Home</a></li>\\n          <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Map View</li>\\n        </ol>\\n      </nav>\\n    </div>\\n  </div>\\n  <!-- <div class=\\\"row\\\">\\n      <div class=\\\"col-9 col-sm-10 col-md-11 p-t-3\\\">\\n      </div>\\n      <div class=\\\"col-3 col-sm-2 col-md-1 text-right\\\">\\n         <button type=\\\"button\\\" class=\\\"btn-search\\\" (click)=\\\"btnShowFilters()\\\"><i class=\\\"icon-ic_searchfilter\\\"></i></button>\\n      </div>\\n    </div>\\n    <div class=\\\"row page-filters\\\" [ngClass]=\\\"{'show': showFilters == true}\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3 p-r-0\\\"></div>\\n          <div class=\\\"col-md-3 p-r-0\\\"></div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"imeiNumber\\\"  name=\\\"imeiNumber\\\" (change)=\\\"changeImei()\\\">\\n                    <option value=\\\"\\\">Select IMEI Number</option>\\n                <option *ngFor=\\\"let vehicle of liveVehicleArray\\\" value=\\\"{{vehicle.imeiNumber}}\\\">{{vehicle.imeiNumber}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group-append datepicker\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" readOnly placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\"\\n                  [(ngModel)]=\\\"model\\\" (dateSelect)=\\\"changeDate();\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                <button style=\\\"outline:none\\\" class=\\\"btn-cal calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"> <i class=\\\"fa fa-calendar\\\"\\n                    aria-hidden=\\\"true\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div> -->\\n  \\n  \\n  <div class=\\\"row\\\">\\n    \\n  \\n    \\n    \\n      <div id=\\\"googleMap\\\" class=\\\"google_map_align p-l-3 p-r-3\\\"*ngIf=\\\"devicetrack == true\\\">\\n          <agm-map [zoom]=\\\"9\\\" [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\n              <agm-direction [origin]=\\\"origin\\\" [destination]=\\\"destination\\\" [renderOptions]=\\\"renderOpts\\\"\\n              [markerOptions]=\\\"markerOpts\\\" [waypoints]=\\\"waypoints\\\"></agm-direction>\\n          </agm-map>\\n        </div>\\n\\n\\n\\n\\n        <div id=\\\"googleMap\\\" class=\\\"google_map_align p-l-3 p-r-3\\\" *ngIf=\\\"devicetrack == false\\\">\\n            <agm-map [zoom]=\\\"20\\\" [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [disableDefaultUI]=\\\"false\\\" [zoomControl]=\\\"false\\\" (mapClick)=\\\"mapClicked($event)\\\" (mapReady)=\\\"mapReady($event)\\\">\\n                <agm-marker *ngFor=\\\"let m of liveVehicleArray; let i = index\\\" (markerClick)=\\\"clickedMarker(m.rcNumber, i,infowindow, $event)\\\" [latitude]=\\\"m.latitude\\\"\\n                [longitude]=\\\"m.langitude\\\" [label]=\\\"\\\" [markerDraggable]=\\\"false\\\" [iconUrl]=\\\"m.image\\\" (dragEnd)=\\\"markerDragEnd(m, $event)\\\">\\n                <agm-info-window #infowindow>\\n                    <div class=\\\"map-tool-tip\\\">\\n                        <h6>Vehicle No: <span>{{m.vehicleRegNo}}</span></h6><br>\\n                        <h6>IMEI No: <span>{{m.imeiNumber}}</span>, Updated Date: <span>{{m.updatedDate}}</span></h6><br>\\n                        <h6>Location: <span>{{m.location}}</span></h6>\\n                    </div>\\n                </agm-info-window>\\n              </agm-marker>\\n            </agm-map>\\n          </div>\\n\\n\\n  </div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { LiveVehicle } from '../common/models/livedevices.model';\nimport { DeviceManagementServiceApi } from '../common/services/devicemanagement.api';\nimport { DashboardServiceApi } from '../common/services/dashboard.api';\nimport { NgbDateFRParserFormatter } from '../common/directives/dateformatter';\nimport { ToasterService } from '../common/services/toaster.service';\ndeclare var google: any;\n\n@Component({\n    selector: 'app-mapview',\n    templateUrl: './mapview.component.html',\n    styleUrls: ['./mapview.component.css']\n})\nexport class MapviewComponent implements OnInit, OnDestroy {\n\n    public model: NgbDateStruct;\n    public formatDate: string;\n    public showFilters: Boolean = false;\n    public devicetrack: Boolean = false;\n    public searchValue: string;\n    // lat = 17.3850;\n    // lng = 78.4867;\n    previous;\n    lat = 17.419545;\n    lng = 78.401008;\n    iconURL = '/assets/images/ic_auto_yellow.png';\n\n    public imeiNumber: string;\n    marker;\n    devicetracking;\n    origin: any;\n    destination: any;\n    originstr: string;\n    destinationstr: string;\n    renderOpts = { suppressMarkers: true };\n    waypoints = [];\n    markerOpts = {\n        origin: { icon: '../../../assets/images/source.png' },\n        destination: { icon: '../../../assets/images/dest.png', label: 'marker label', opacity: 0.8 }\n    };\n\n\n    liveVehicleArray: Array<LiveVehicle> = [];\n\n    gMaps;\n    map: any;\n    zoom: 12;\n    animation: string;\n\n    constructor(private calendar: NgbCalendar, private devicemanagementApiService: DeviceManagementServiceApi,\n        private deviceTrackingApi: DashboardServiceApi, private ngbDateFRParserFormatter: NgbDateFRParserFormatter,\n        private toasterService: ToasterService) {\n        this.gMaps = GoogleMapsAPIWrapper;\n        this.model = this.calendar.getToday();\n        this.searchValue = '';\n        this.imeiNumber = '';\n    }\n\n    getVehicle: any;\n    ngOnInit() {\n        this.getLiveVehicles();\n        this.origin = { lat: .0000, lng: .0000 };\n        this.destination = { lat: .0000, lng: .0000 };\n    }\n\n\n    btnShowFilters() {\n        this.showFilters = !this.showFilters;\n    }\n    changeDate() {\n    }\n    changeImei() {\n        if (this.imeiNumber !== '') {\n            this.getdeviceTrackData();\n        } else {\n            this.devicetrack = false;\n        }\n\n    }\n\n    mapReady(map) {\n        this.map = map;\n    }\n    clickedMarker(label: string, index: number, infowindow, $event) {\n        this.lat = $event.latitude;\n        this.lng = $event.longitude;\n        this.map.setCenter({ lat: $event.latitude, lng: $event.longitude });\n        const position = new google.maps.LatLng($event.latitude, $event.longitude);\n        this.map.panTo(position);\n        this.map.setZoom(22);\n        if (this.previous) {\n            this.previous.close();\n        }\n        this.previous = infowindow;\n    }\n    getLiveVehicles() {\n        this.devicemanagementApiService.getliveDevices().subscribe((data: LiveVehicle) => {\n            this.liveVehicleArray = data.content;\n            console.log(this.liveVehicleArray);\n            this.prepareDatatoDispaly();\n        });\n    }\n\n\n    prepareDatatoDispaly() {\n        for (let current = 0; current < this.liveVehicleArray.length; current++) {\n            const curLiveVehicle = this.liveVehicleArray[current];\n            const oldposition = new google.maps.LatLng(curLiveVehicle.prevLatitude, curLiveVehicle.prevLangitude);\n            const newposition = new google.maps.LatLng(curLiveVehicle.latitude, curLiveVehicle.langitude);\n            let angle = google.maps.geometry.spherical.computeHeading(oldposition, newposition);\n            angle = Math.round(angle);\n            angle = Math.ceil(angle / 5) * 5;\n            if (angle > 180) {\n                angle = 180;\n            }\n            if (angle < -180) {\n                angle = -180;\n            }\n        }\n    }\n\n    getdeviceTrackData() {\n        this.formatDate = this.ngbDateFRParserFormatter.format(this.model);\n        this.deviceTrackingApi.getTrackingDetails(this.imeiNumber, this.formatDate)\n            .subscribe((data: any) => {\n                this.devicetracking = data.content;\n                console.log(this.devicetracking);\n                const lastobj = this.devicetracking.length - 1;\n                this.waypoints = [];\n                let loop: number;\n                if (this.devicetracking.length !== 0) {\n                    this.origin = { lat: Number(this.devicetracking[lastobj].latitude),\n                        lng: Number(this.devicetracking[lastobj].langitude) };\n                    this.destination = { lat: Number(this.devicetracking[0].latitude), lng: Number(this.devicetracking[0].langitude) };\n                    if (this.origin.lat !== 0 && this.origin.lng !== 0 && this.destination.lat !== 0 && this.destination.lng !== 0) {\n                        for (loop = 0; loop < 23; loop++) {\n                            this.waypoints.push({\n                                location: { lat: Number(this.devicetracking[loop].latitude),\n                                    lng: Number(this.devicetracking[loop].langitude) },\n                                stopover: true\n                            });\n\n                        }\n                        this.devicetrack = true;\n                    } else {\n                        this.devicetrack = false;\n                        this.toasterService.showError('bottom-right',\n                        'ERROR: No Tracking Data available for this IMEI Number : ' + this.imeiNumber);\n                    }\n\n\n                } else {\n                    this.devicetrack = false;\n                    this.toasterService.showError('bottom-right',\n                    'ERROR: No Tracking Data available for this IMEI Number : ' + this.imeiNumber);\n                }\n\n\n            });\n    }\n    ngOnDestroy() {\n        if (this.getVehicle) {\n            clearInterval(this.getVehicle);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MapviewComponent } from './mapview.component';\nimport { MapviewRoutingModule } from './mapview-routing.module';\nimport { AgmCoreModule } from '@agm/core';\nimport { AgmDirectionModule } from 'agm-direction';\n\n@NgModule({\n    declarations: [MapviewComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgbModule,\n        MapviewRoutingModule,\n        AgmDirectionModule,\n        AgmCoreModule\n    ]\n})\nexport class MapviewModule { }\n"],"sourceRoot":""}