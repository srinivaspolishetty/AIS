import { Component, OnInit } from '@angular/core';
import { DeviceCommunication } from "../common/models/devicecommunication.model";
import { DeviceManagementServiceApi } from "../common/services/devicemanagement.api";
import { PieChart } from "../common/models/piechart.model";
import { Dashboard } from "../common/models/dashboard.model";
import { DashboardServiceApi } from "../common/services/dashboard.api";
@Component({
  selector: 'app-dashboard',
  templateUrl: './dashboard.component.html',
  styleUrls: ['./dashboard.component.css']
})
export class DashboardComponent implements OnInit {

  public Parking : number = 0;
  public Idle : number = 0;
  public Sleep : number = 0;
  public Running : number = 0;
  public deviceHealthTotal : number = 0;
  public showPieChart: boolean = false;
  public ignition: Dashboard;
  public mainPowerStatus: Dashboard;;
  public tamperAlert: Dashboard;
  public emergency: Dashboard;
  public communicating: Dashboard;

  pieChart: PieChart = new PieChart([205, 205], true, false, false, true, false, 'below', '0.38', '');
  constructor(private devicemanagementApiService: DeviceManagementServiceApi,
    private dashboardService: DashboardServiceApi) {
    this.pieChart.colorScheme = { domain: ['#00ff00', '#ff0000'] };
    this.ignition = new Dashboard(0,0,0);
    this.mainPowerStatus = new Dashboard(0,0,0);
    this.tamperAlert = new Dashboard(0,0,0);
    this.emergency = new Dashboard(0,0,0);
    this.communicating = new Dashboard(0,0,0);
  }

  ngOnInit() {
    this.getDashboardDetails();
    this.getDeviceHealthData();
  }

  getDashboardDetails() {
    const actionsArray = ["ignition", "mainPowerStatus", "tamperAlert", "emergency", "communicating"];
    this.dashboardService.getAllDetails(actionsArray)
      .subscribe((data: Dashboard) => {
        for (let i = 0; i < data.length; i++) {
          this[data[i].action] = data[i];
        }
        if (this.communicating.total !== 0) {
          this.showPieChart = true;
          const pieChartData = new Object([this.communicating]);
          this.pieChart.data = [
            { 'name': 'Communicating', 'value': pieChartData[0].on },
            { 'name': 'Not Communicating', 'value': pieChartData[0].off },
          ];
        }
        else {
          this.showPieChart = false;
        }
      });
  }

  getDeviceHealthData(){
    this.dashboardService.getDeviceHealthDetails()
    .subscribe((data: Dashboard) => {
      for (let i = 0; i < data.length; i++) {
        this[data[i].status] = data[i].count;
        this.deviceHealthTotal += data[i].count
      }
      console.log(this.deviceHealthTotal);
    });
  }
}
