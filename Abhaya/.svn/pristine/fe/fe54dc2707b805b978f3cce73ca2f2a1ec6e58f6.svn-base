import { Component, OnInit } from '@angular/core';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';
import { EmergencyMonitoringServiceApi } from "../common/services/emergencymonitoring.api";
import { EmergencynMonitoring } from "../common/models/emergencymonitoring.model";
import { PageModel } from "../common/models/page.model";
import { NgbDateFRParserFormatter } from "../common/directives/dateformatter";
import { EmergencydetailsComponent } from "./emergencydetails/emergencydetails.component";
import { environment } from '../../environments/environment';

@Component({
  selector: 'app-emergencymonitoring',
  templateUrl: './emergencymonitoring.component.html',
  styleUrls: ['./emergencymonitoring.component.css']
})
export class EmergencymonitoringComponent implements OnInit {

  public showFilters : Boolean = false;
  public page: PageModel = new PageModel();
  public pageSize: Number = environment.pageSize;
  public p : number;
  startDateModel: NgbDateStruct;
  endDateModel: NgbDateStruct;
  public formatStartDate : string;
  public formatEndDate : string;
  public searchValue : string = '';
  public showSearchClear = false;
  public noData : Boolean = false;
  emergencyMonitoringdata : Array<EmergencynMonitoring> = [];
  constructor(private emergencyApiService:EmergencyMonitoringServiceApi,
    private modalService: NgbModal, private calendar: NgbCalendar,
    private ngbDateFRParserFormatter: NgbDateFRParserFormatter) {
   }

  ngOnInit() {
    this.getemergencyMonitoringDetails(0, this.pageSize);
  }
  refreshPage() {
    this.searchValue = '';
    this.startDateModel = undefined;
    this.endDateModel = undefined;
    this.getemergencyMonitoringDetails(0, this.pageSize);
  }
  emergencyDetails(emergencyDetails) {
    const modalRef = this.modalService.open(EmergencydetailsComponent, { size : 'lg', backdrop: 'static',
    keyboard: false });
    modalRef.componentInstance.selectedEmergencydata = emergencyDetails;
  }

  btnShowFilters(){
    this.showFilters = !this.showFilters;
  }
  changeDate() {
    this.getemergencyMonitoringDetails(0, this.pageSize);
  }
  searchData() {
    this.getemergencyMonitoringDetails(0, this.pageSize);
    this.showSearchClear = (this.searchValue.length > 4) ? true : false;
  }
  clearSearch() {
    this.searchValue = '';
    this.showSearchClear = false;
    this.searchData();
  }
  pageChanged(event) {
    this.p = event;
    this.getemergencyMonitoringDetails(this.p-1, this.pageSize);
  }
  getemergencyMonitoringDetails(page:Number, size:Number) {
    
    this.formatStartDate = this.ngbDateFRParserFormatter.format(this.startDateModel);
    this.formatEndDate = this.ngbDateFRParserFormatter.format(this.endDateModel);
    this.emergencyApiService.getemergencyMonitoringDetails(page,size,this.formatStartDate, this.formatEndDate,this.searchValue)
    .subscribe((data : EmergencynMonitoring) => {
      this.emergencyMonitoringdata = data.content;
      this.noData = (this.emergencyMonitoringdata.length > 0);
      this.page = data.page;
      console.log(this.emergencyMonitoringdata);
    });
  }

}
